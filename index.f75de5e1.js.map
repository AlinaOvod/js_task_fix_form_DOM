{"mappings":"AAAA;AAEA,MAAM,SAAS,SAAS,gBAAgB,CAAC;AAEzC,MAAM,cAAc,CAAC;IACnB,IAAI,gBAAgB;IAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IACjC,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,CAAC,WAAW,IAAI;QACzC,gBAAgB,CAAC,EAAE,OAAO,KAAK,CAAC,GAAG,GAAG,CAAC,EAAE,OAAO,KAAK,CAAC,GAAG,CAAC;QAE1D;IACF;IAGF,gBAAgB,cACb,KAAK,CAAC,KACN,GAAG,CAAC,CAAC,OAAS,KAAK,MAAM,CAAC,GAAG,WAAW,KAAK,KAAK,KAAK,CAAC,IACxD,IAAI,CAAC;IAER,OAAO;AACT;AAEA,MAAM,eAAe,CAAC;IACpB,MAAM,QAAQ,SAAS,aAAa,CAAC;IAErC,MAAM,SAAS,CAAC,GAAG,CAAC;IACpB,MAAM,YAAY,CAAC,WAAW,MAAM,EAAE;IACtC,MAAM,WAAW,GAAG,YAAY,MAAM,IAAI;IAE1C,MAAM,MAAM,CAAC;IACb,MAAM,YAAY,CAAC,eAAe,YAAY,MAAM,IAAI,EAAE,WAAW;AACvE;AAEA,OAAO,OAAO,CAAC,CAAC,OAAS,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst inputs = document.querySelectorAll('input');\n\nconst divideWords = (string) => {\n  let dividedString = string;\n\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === string[i].toUpperCase()) {\n      dividedString = `${string.slice(0, i)} ${string.slice(i)}`;\n\n      break;\n    }\n  }\n\n  dividedString = dividedString\n    .split(' ')\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n    .join(' ');\n\n  return dividedString;\n};\n\nconst updateInputs = (input) => {\n  const label = document.createElement('label');\n\n  label.classList.add('field-label');\n  label.setAttribute('htmlFor', input.id);\n  label.textContent = divideWords(input.name);\n\n  input.before(label);\n  input.setAttribute('placeholder', divideWords(input.name).toUpperCase());\n};\n\ninputs.forEach((item) => updateInputs(item));\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}